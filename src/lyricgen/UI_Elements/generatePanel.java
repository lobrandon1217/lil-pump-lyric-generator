/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lyricgen.UI_Elements;

import java.sql.*;
import javax.swing.*;
import javax.swing.table.*;
import lyricgen.LyricGenerator;
import lyricgen.mysqlStorage;

/**
 *
 * @author Brandon
 */
public class generatePanel extends javax.swing.JPanel {
    
    /**
     * Creates new form generatePanel
     */
    public generatePanel() {
        initComponents();
        //set the model to a new blank model
        //then add more columns
        jTable1.setModel(new DefaultTableModel(){
            //This makes it so that you CANNOT edit any of the cells, which we don't want
            @Override
            public boolean isCellEditable(int row, int column){  
                return false;  
            }
        });
        DefaultTableModel jTableModel = (DefaultTableModel) jTable1.getModel();
        //add each column
        jTableModel.addColumn("id");
        jTableModel.addColumn("lyrics");
        jTableModel.addColumn("Title");
        jTableModel.addColumn("Artist");
        jTableModel.addColumn("Submitted By");
        
        //Remove the column from the jTable but not from the Table Model
        jTable1.removeColumn(jTable1.getColumnModel().getColumn(0)); //id
        jTable1.removeColumn(jTable1.getColumnModel().getColumn(0)); //lyrics index - 1
        
        try {
            //get all things from songs
            ResultSet rsSongs = mysqlStorage.sqlHandler.executeQuery("SELECT * FROM songs;");
            while( rsSongs.next() ) {
                //Long string[], basically puts all of the rsSongs properties into the table in the right slots
                jTableModel.addRow(new String[]{String.format("%s",rsSongs.getInt("id")), rsSongs.getString("lyrics"), rsSongs.getString("title"), rsSongs.getString("artist"), mysqlStorage.sqlHandler.getUserFromId(rsSongs.getInt("user_submitted_id")).get("username").toString()});
            }
        } catch(SQLException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(185, 207, 212));
        setPreferredSize(new java.awt.Dimension(800, 400));

        jScrollPane1.setBackground(new java.awt.Color(185, 207, 212));
        jScrollPane1.setBorder(null);

        jTable1.setBackground(new java.awt.Color(185, 207, 212));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setSelectionForeground(new java.awt.Color(185, 207, 212));
        jScrollPane1.setViewportView(jTable1);

        jSlider1.setBackground(new java.awt.Color(185, 207, 212));
        jSlider1.setMajorTickSpacing(50);
        jSlider1.setMaximum(300);
        jSlider1.setMinorTickSpacing(5);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(150);

        jLabel1.setBackground(new java.awt.Color(185, 207, 212));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("<html>\n<center>Word Generator Iterations<br>\n<i>We do not suggest doing over 150</i>");

        jButton1.setBackground(new java.awt.Color(185, 207, 212));
        jButton1.setText("Generate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Takes the song selected and generates a song using the slider length as well
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Get the selected songs
        int[] selectedTableRows = jTable1.getSelectedRows();
        
        //Create a Song Factory / Lyric Generator
        LyricGenerator songFactory = new LyricGenerator();
        
        //Check selected songs list size
        if( selectedTableRows.length > 0 ) {
            //for each selected table row
            for( int i : selectedTableRows ) {
                try {
                    //Get the model of the table
                    TableModel jTableModel = jTable1.getModel();
                    //Set the properties of the song
                    /**
                     * indices
                     * 0 : id
                     * 1 : lyrics
                     * 2 : title
                     * 3 : artist
                     * 4 : submitted by (name)
                     */
                    int id = Integer.valueOf((String) jTableModel.getValueAt(i, 0));
                    //get song lyrics from mysql
                    ResultSet songLyrics = mysqlStorage.sqlHandler.executeQuery(String.format("SELECT lyrics FROM songs WHERE id = %s;", id));
                    while(songLyrics.next()){
                        //Feed the lyrics into the songLyrics object
                        songFactory.insertString(songLyrics.getString("lyrics"));
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Getting song lyrics failed", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
            //Show the result
            generatedSong finalWindow = new generatedSong(songFactory.createLyrics(jSlider1.getValue()));
            finalWindow.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
